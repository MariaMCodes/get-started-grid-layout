body {
    margin: 40px;
}


/* Layering items - z-index */


/* You can layer items in the Grid, using z-index to control the order that they stack. In this example I have boxes arranged on a grid, my box F is last in the source order and positioned on the Grid so it partly overlaps box D.

Without any z-index property it will display on top of box D. However I can add a z-index and control the position which works as you would expect if you have used the z-index property with positioned elements. */

.wrapper {
    display: grid;
    grid-gap: 10px;
    grid-template-columns: repeat(5, [col] 100px);
    grid-template-rows: repeat(3, [row] auto);
    background-color: #fff;
    color: #444;
}

.box {
    background-color: #444;
    color: #fff;
    border-radius: 5px;
    padding: 20px;
    font-size: 150%;
    z-index: 10;
}

.a {
    grid-column: col / span 2;
    grid-row: row;
}

.b {
    grid-column: col 3 / span 3;
    grid-row: row;
}

.c {
    grid-column: col;
    grid-row: row 2;
}

.d {
    grid-column: col 2 / span 3;
    grid-row: row 2;
}

.e {
    grid-column: col / span 5;
    grid-row: row 3;
}

.f {
    grid-column: col 3 / span 3;
    grid-row: row 2;
    background-color: rgba(49, 121, 207, 0.5);
    z-index: 20;
}


/* A grid item as a new positioning context */


/* You can absolutely position items inside an area of the Grid. In this example I have used position: relative on my .content Grid Area. I can then position the four arrow images using absolute positioning inside that area, and it works as you would expect. */

.sidebar {
    grid-area: sidebar;
}

.content {
    grid-area: content;
    position: relative;
}

.header {
    grid-area: header;
}

.footer {
    grid-area: footer;
}

.wrapper2 {
    display: grid;
    grid-gap: 10px;
    grid-template-columns: 200px 200px 200px;
    grid-template-areas: "header  header  header" "sidebar content content" "footer  footer  footer";
    background-color: #fff;
    color: #444;
}

.box2 {
    background-color: #444;
    color: #fff;
    border-radius: 5px;
    padding: 50px;
    font-size: 150%;
}

.header,
.footer {
    background-color: #999;
}

.topleft {
    position: absolute;
    top: 0;
    left: 0;
}

.topright {
    position: absolute;
    top: 0;
    right: 0;
}

.bottomleft {
    position: absolute;
    bottom: 0;
    left: 0;
}

.bottomright {
    position: absolute;
    bottom: 0;
    right: 0;
}